<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2019-2020 Timothy Yusun -->
<!-- This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License-->
<!-- https://creativecommons.org/licenses/by-nc-sa/4.0 -->

<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sec-permutations-combinations">
    <title>Permutations and Combinations</title>
        <objectives>
        <ul>
            <li>Derive the formulas for permutations and combinations (of <m>n</m> objects taken <m>k</m> at a time), multi-permutations, and permutations with repetitions allowed.</li>
            <li>Explain how overcounting is used as a counting technique and apply it to counting problems.</li>
            <li>Given a counting problem, recognize which of the above techniques is applicable, and use it to solve the problem.</li>
        </ul>
    </objectives>
    <p>
        In this section we get a little bit fancier and define some special quantities that show up frequently when counting objects or rearrangements.
        First, recall that the <xref text="custom" ref="def-factorial">factorial</xref> of <m>n</m> is shorthand for the product <me>n! = n \times (n-1) \times \cdots \times 1</me>, which, as we saw in the previous section, can be used to count the number of ways to sit <m>n</m> people in a row for a concert.
    </p>
    <sidebyside>    
    <video xml:id="video-permutation" youtube="IfyjfJfl-sU" play-at="embed" />
    </sidebyside>
    <p>
        <alert>Video</alert>: <em>Permutations</em>
    </p>

    <definition xml:id="def-permutation">
    	<title>Permutation</title>
    	<statement>
    		<p>
    			A <term>permutation</term> is a bijection from a finite set <m>S</m> to itself.
    		</p>
    	</statement>
    </definition>


    <remark xml:id="remark-permutation">
    		<p>
    			If <m>|S| = n</m>, then there are <m>n!</m> bijections <m>S \rightarrow S</m>.
				Equivalently,
				<ul>
					<li>There are <m>n!</m> ways to arrange <m>n</m> <em>distinct</em> objects in a row.</li>
					<li>There are <m>n!</m> rearrangements of a word with <m>n</m> <em>distinct</em> letters. Each rearrangement is said to be a <em>permutation</em> of the <m>n</m> letters.</li>
				</ul>
			</p>
	</remark>
	<!--
	<sidebyside width="60%" margins="auto">
		<video xml:id="test-youtube" youtube = "XJnIdRXUi7A"/>
	</sidebyside>
	-->
	<example xml:id="eg-counting-bijections">
		<title>Counting Bijections</title>
		<statement>
			<p>
				Let <m>S = \{a,b,c,d\}</m>.
				Then the function <m>f: S \rightarrow S</m> defined by
				<me> f(a) = b, f(b) = d, f(c) = c, f(d) = a</me>
				is one example of a bijection from <m>S</m> to <m>S</m>.
				Since <m>|S| = 4</m>, there are a total of <m>4! = 24</m> bijections from <m>S</m> to itself.
			</p>
		</statement>
	</example>
	<p>
		What if we wanted to rearrange <m>k</m> of the <m>n</m> distinct objects (i.e. only a subset)?
	</p>
	<exercise xml:id="ex-counting-EQUATION">
		<title>EQUATION</title>
		<statement>
			<p>
				How many three-letter words can be formed using the letters of the word 
			</p>
				<sidebyside width="20%" margins="auto"><p>EQUATION?</p></sidebyside>
		</statement>
		<hint>
			<p>
				How many choices do you have for the first letter? the second? the third?
				Use the <xref text="custom" ref="prin-prod-rule">Product Rule</xref>.
			</p>
		</hint>
	</exercise>

	<p>
		Let's generalize this.
		Let <m>k \leq n</m>, and use the <xref text="custom" ref="prin-prod-rule">Product Rule</xref> to count the number of ways to arrange <m>k</m> objects in a row, taking from a set of <m>n</m> distinct objects.
	</p>
	<p>
		Then express your answer in terms of factorials, and complete the statement of <xref ref="prop-Pnk"/> below.
	</p>
	<proposition xml:id="prop-Pnk">
		<title><m>k</m>-permutation of an <m>n</m>-set</title>
		<statement>
			<p>
			<notation>
                <usage>P(n,k),\ {}_nP_k</usage>
                <description><m>k</m>-permutation of an <m>n</m>-set</description>
            </notation>
				If <m>k \leq n</m>, then the number of permutations of <m>k</m> distinct elements from a set of size <m>n</m>, denoted by <m>P(n,k)</m> or <m>{}_nP_k</m>, is 
				<me>P(n,k) = <fillin characters="20" /></me>.
			</p>
		</statement>
	</proposition>

	<remark xml:id="remark-Pnk-notation">
			<p>
				When solving problems you may use either notation above and leave your answer in that form.
			</p>
	</remark>

	<example xml:id="eg-counting-student-council">
		<title>Student Council Representatives</title>
		<statement>
			<p>
				How many ways can a class of 45 students elect a president, vice-president, and secretary to represent them on student council?
			</p>
		</statement>
		<solution>
			<p>
				This corresponds to the number of permutations of 45 objects taken 3 at a time, so the total is <me>45 \cdot 44 \cdot 43 = 85140</me>.
			</p>
			<p>
				One can also imagine the solution using the <xref text="custom" ref="prin-prod-rule">Product Rule</xref>: there are three steps to this operation:
			</p>
			<sidebyside width="70%" margins="auto">
			<tabular>
				<row>
					<cell>elect a president:</cell>
					<cell>45 choices</cell>
				</row>
				<row>
					<cell>elect a vice-president:</cell>
					<cell>44 choices</cell>
				</row>
				<row>
					<cell>elect a secretary:</cell>
					<cell>43 choices</cell>
				</row>
			</tabular>
			</sidebyside>
			<p>
				Then the number of ways to do so is <m>45 \cdot 44 \cdot 43</m>.
			</p>
		</solution>
	</example>

	<exercise xml:id="ex-counting-ZAHLEN">
		<title>ZAHLEN</title>
		<statement>
			<p>
				<ol label="(a)">
					<li>Count the number of three-letter words that can be formed from the letters of the word ZAHLEN.</li>
					<li>How many of the words from (a) contain <alert>only consonants</alert>?</li>
					<li>How many of the words from (a) contain <alert>contain exactly one vowel</alert>?</li>
				</ol>
			</p>
		</statement>
		<hint>
			<p>
				For part c., try using the <xref text="custom" ref="prin-prod-rule">Product Rule</xref>.
				What steps need to be performed to form a word that satisfies the given condition?
			</p>
		</hint>
		<answer>
			<p>a. 120</p>
			<p>b. 24</p>
			<p>c. 72</p>
		</answer>
		<solution>
			<p>
				c. First, pick two consonants out of the four: <m>_4P_2</m> two-letter words can be formed.
				Then, pick a vowel (2 choices), and insert it into the two-letter word (3 possible slots) to form the required three-letter word with exactly one vowel.
				Thus the total number of such words is 
				<me> _4P_2 \times 2 \times 3 = 72</me>.
			</p>
		</solution>
	</exercise>

	<p>
		The next example shows that having <em>distinct</em> objects is crucial in the statement of <xref  ref="def-permutation"/>.
	</p>

	<sidebyside>    
    <video xml:id="video-permutation-multiset" youtube="1ByDmzD7jDg" play-at="embed" />
    </sidebyside>
    <p>
        <alert>Video</alert>: <em>Permutations of a Multiset</em>
    </p>

	<example xml:id="eg-counting-YEET">
		<title>Repeated Letters</title>
		<statement>
			<p>
				Count the number of arrangements of the letters in the word YEET.
			</p>
			<p>
				<alert>Solution</alert>
				A misguided attempt to apply <xref ref="def-permutation" /> will yield <m>4! = 24</m> possible arrangements of the word YEET.
				However, we see that there are only 12 possibilities when we list them all:
			</p>
				<sidebyside width="60%" margins="auto">
				<tabular>
					<row>
						<cell>YEET</cell>
						<cell>YETE</cell>
						<cell>YTEE</cell>
						<cell>TYEE</cell>
						<cell>TEYE</cell>
						<cell>TEEY</cell>
					</row>
					<row>
						<cell>EETY</cell>
						<cell>EEYT</cell>
						<cell>ETYE</cell>
						<cell>ETEY</cell>
						<cell>EYET</cell>
						<cell>EYTE</cell>
					</row>
				</tabular>
				</sidebyside>
			<p>
				This is because the letters in the word YEET are <em>not</em> distinct!
				If we distinguish each letter E in the word by calling them E<m>_1</m> and E<m>_2</m>, then we see that each arrangement above actually came from <alert>two</alert> arrangements, for instance:
			</p>
				<sidebyside width="70%" margins="auto">
				<tabular>
					<row>
						<cell>YE<m>_1</m>E<m>_2</m>T and YE<m>_2</m>E<m>_1</m>T <m>\rightarrow</m> YEET</cell>
					</row>
					<row>
						<cell>YE<m>_1</m>TE<m>_2</m> and YE<m>_2</m>TE<m>_1</m> <m>\rightarrow</m> YETE</cell>
					</row>
				</tabular>
				</sidebyside>
			<p>
				Thus while <xref ref="def-permutation"/> predicts <m>4! = 24</m> arrangements of the four letters Y, E<m>_1</m>, E<m>_2</m>, and T, we see that for each arrangement either E<m>_1</m> is somewhere to the left, or somewhere to the right of E<m>_2</m>.
				Hence we divide by two to account for this overcounting, which gives the correct number, <m>4!/2 = 12</m>.
			</p>

		</statement>

	</example>

	<p>
		What if three letter E's are repeated?
		Following the same reasoning, we can distinguish them first as E<m>_1</m>, E<m>_2</m>, and E<m>_3</m>, then apply <xref ref="def-permutation"/>.
		We will get a number that overcounts the actual answer by a factor of 6 this time, since there are <m>3! = 6</m> ways to arrange the three E's:
	</p>
		<sidebyside width="80%" margins="auto">
			<tabular>
				<row>
					<cell>E<m>_1</m>E<m>_2</m>E<m>_3</m></cell>
					<cell>E<m>_1</m>E<m>_3</m>E<m>_2</m></cell>
					<cell>E<m>_2</m>E<m>_1</m>E<m>_3</m></cell>
				</row>
				<row>
					<cell>E<m>_2</m>E<m>_3</m>E<m>_1</m></cell>
					<cell>E<m>_3</m>E<m>_1</m>E<m>_2</m></cell>
					<cell>E<m>_3</m>E<m>_2</m>E<m>_1</m></cell>
				</row>
			</tabular>
		</sidebyside>
	<p>
		We generalize this to <xref ref="prop-perm-repeat"/>, which gives a way to count rearrangements of words when some letters are repeated. (We say the letters are elements of a <term>multiset</term>, which generalizes sets to allow for multiple instances of elements.)
	</p>

	<proposition xml:id="prop-perm-repeat">
		<title>Permutations of a multiset</title>
		<statement>
			<p>
				Let <m>S</m> be a set with <m>n</m> (not necessarily distinct) objects, such that there are <m>n_1</m> objects of type 1, <m>n_2</m> objects of type 2, <m>\ldots</m>, and <m>n_k</m> objects of type <m>k</m>, where <m>n_1 + n_2 + \cdots + n_k = n</m>.
				Then the number of arrangements of these objects is
				<me> \dfrac{n!}{n_1! n_2! \cdots n_k!}</me>.
			</p>
		</statement>
	</proposition>


	
	<exercise xml:id="ex-counting-MISSISSAUGA">
		<title>MISSISSAUGA</title>
		<statement>
			<p>
				How many arrangements can be formed using the letters of the word 
			</p>
			<sidebyside width="25%" margins="auto">
				<p>MISSISSAUGA?</p>
			</sidebyside>
		</statement>
		<answer>
			<p><m>\dfrac{11!}{1!\ 2!\ 4!\ 2!\ 1!\ 1!} = \dfrac{11!}{2!\ 4!\ 2!} = 415800.</m></p>
		</answer>
	</exercise>

	<exercise xml:id="ex-counting-MATHEMATICS">
		<title>MATHEMATICS</title>
		<statement>
			<p>
				Count the number of ways the letters of the word MATHEMATICS can be arranged so that
				<ol label="(a)">
					<li>The two M's are beside each other.</li>
					<li>The two M's are <em>not</em> beside each other.</li>
					<li>The word MATH appears somewhere in the arrangement.</li>
				</ol>
			</p>
		</statement>
		<hint><p>a. Treat <sq>MM</sq> as a single object.</p></hint>
		<hint><p>b. How are parts a. and b. related?</p></hint>
		<hint><p>c. Treat <sq>MATH</sq> as a single object.</p></hint>
		<solution>
			<p>
				c. Treating <sq>MATH</sq> as a single object, we reduce the problem to counting the number of arrangements of eight distinct objects:
			</p>
			<sidebyside widths="13% 7% 7% 7% 7% 7% 7% 7%" margins="auto">
				<p><sq>MATH</sq></p>
				<p>E</p>
				<p>M</p>
				<p>A</p>
				<p>T</p>
				<p>I</p>
				<p>C</p>
				<p>S</p>
			</sidebyside>
			<p>
				Hence there are <m>8!</m> rearrangements of MATHEMATICS where the word MATH appears.
			</p>
		</solution>
	</exercise>

	<exercise xml:id="ex-counting-esports">
		<title>Esports Tournament</title>
		<statement>
			<p>
				UTM Athletics is sending a team of 7 players to represent the university at an Ontario e-sports tournament called <em>The Provincial</em>.
				Suppose that a total of 30 students tried out for the team.
				<ol label="(a)">
					<li>How many possible teams can be formed from the students who tried out?</li>
					<li><p>Suppose further that there are different positions on the team, as follows
					<ul>
						<li>1 carry player</li>
						<li>1 mid player</li>
						<li>1 offlane player</li>
						<li>2 support players</li>
						<li>2 reserve players</li>
					</ul>
					How many possible teams can be formed from the students who tried out?
					Assume everyone who tried out can play every position. (Not usually the case in reality<ellipsis/>)</p></li>
				</ol>
			</p>
		</statement>
			<hint><p>a. Each student either makes the team, or doesn't. Express each possible team as a sequence of 30 labels, one for each student who tried out.</p></hint>
			<hint><p>b. Same with a., but with more labels to account for the different positions on the team.</p></hint>
	</exercise>
	<p>
		The scenario in part (a) of <xref ref="ex-counting-esports"/> is an example where the order in which the students are picked does not matter -- the team is just a collection (set) of 7 players.
		Here's a smaller example:
	</p>

	<example xml:id="eg-counting-bridesmaids">
		<title>Picking Bridesmaids</title>
		<statement>
			<p>
				Adele is getting married soon, and due to space constraints at the venue, needs to pick exactly two of her five best friends (Mel B., Mel C., Emma, Geri, and Victoria) to be her bridesmaids.
				How many possible combinations are there?
			</p>
			<p><alert>Solution</alert>
				Each combination of bridesmaids corresponds to a rearrangement of three X's and two O's, given a <em>fixed</em> arrangement of the five names in a row; for instance, the arrangement
			</p>
				<sidebyside width="55%" margins="auto">
				<tabular>
					<row>
						<cell>Mel B.</cell>
						<cell>Mel C.</cell>
						<cell>Emma</cell>
						<cell>Gerri</cell>
						<cell>Victoria</cell>
					</row>
					<row>
						<cell>O</cell>
						<cell>X</cell>
						<cell>X</cell>
						<cell>O</cell>
						<cell>X</cell>
					</row>
				</tabular>
				</sidebyside>
				<p>
					means that Mel B. and Gerri will be bridesmaids, while
				</p>
				<sidebyside width="55%" margins="auto">
				<tabular>
					<row>
						<cell>Mel B.</cell>
						<cell>Mel C.</cell>
						<cell>Emma</cell>
						<cell>Gerri</cell>
						<cell>Victoria</cell>
					</row>
					<row>
						<cell>X</cell>
						<cell>X</cell>
						<cell>X</cell>
						<cell>O</cell>
						<cell>O</cell>
					</row>
				</tabular>
				</sidebyside>
			<p>
				corresponds to Geri and Victoria being chosen.
				Applying <xref ref="prop-perm-repeat"/> to the three X's and two O's, we see that there are exactly <m>\dfrac{5!}{2! 3!} = 10</m> possible combinations.
			</p>
			<p><alert>Note</alert>
				When the usual formula for <m>k</m>-permutations from an <m>n</m>-set (<xref ref="prop-Pnk"/>)) is applied to the previous example, we get a total of <m>\dfrac{5!}{(5-3)!} = 60</m>, which is incorrect.
				The reason is that this formula treats the pairs
			</p>
			<sidebyside widths="25% 10% 25%" margins="20% 20%">
				<p>(Geri, Victoria)</p>
				<p>and</p>
				<p>(Victoria, Geri)</p>
			</sidebyside>
			<p>
				as different outcomes, while for this example they both correspond to the same combination of <m>\{\text{Geri}, \text{Victoria}\}</m> being chosen as bridesmaids, since the order doesn't matter.
			</p>
			</statement>
	</example>
	<assemblage xml:id="box-overcounting">
	<title>Overcounting as a Counting Technique</title>
		<p>
			In the previous examples you may have been reminded of the main difference between an <em><m>n</m>-tuple</em> <m>(a_1,a_2,\ldots,a_n)</m> and a <em>set of <m>n</m> elements</em> <m>\{a_1,a_2,\ldots,a_n\}</m>: order.
		</p>
		<p>
			To give a small example, the triples <m>(1,2,3)</m> and <m>(3,1,2)</m> are <em>not</em> equal in <m>\mathbb{R}^3</m>, and there are a total of six <em>different</em> triples using these same numbers:
		</p>
		<p>
			<md>
				<mrow>(1,2,3) \amp \amp (2,1,3) \amp \amp (3,1,2)</mrow>
				<mrow>(1,3,2) \amp \amp (2,3,1) \amp \amp (3,2,1)</mrow>
			</md>
		</p>
		<p>
			 On the other hand, the sets <m>\{1,2,3\}</m> and <m>\{3,2,1\}</m> are equal<mdash/>it doesn't matter how we write the three numbers since a set is defined by object membership.
		</p>
		<p>
			In general, to count objects for which order does not matter, we can <alert>assume order matters first, then divide by the overcounting factor</alert>, typically the factorial of how many elements are under consideration.
		</p>
		<p>
			As another example, in <xref ref="prop-perm-repeat"/>, each <m>n_i!</m> term in the denominator is the overcounting factor associated with first treating all objects of type <m>i</m> (there are <m>n_i</m> of them) differently.
		</p>
	</assemblage>
	
	<p>
		When selecting <m>k</m> elements from a set of <m>n</m>, and if the order in which they are selected does not matter, we simply need to divide by <m>k!</m>.
	</p>

	<sidebyside>    
	    <video xml:id="video-combination" youtube="t-PQAURivXg" play-at="embed" />
    </sidebyside>
    <p>
        <alert>Video</alert>: <em>Combinations</em>
    </p>

	<definition xml:id="def-combination">
		<title>Combination</title>
		<statement>
			<p>
			<notation>
                <usage>\binom{n}{k}, C(n,k),\ {}_nC_k</usage>
                <description><m>k</m>-combination of an <m>n</m>-set</description>
            </notation>
				A <term>combination</term> of <m>k</m> elements taken from a set <m>S</m> of size <m>n</m> is any <m>k</m>-element subset of <m>S</m>.
			</p>
		</statement>
	</definition>

	<proposition xml:id="prop-comb">
		<title><m>k</m>-combinations of an <m>n</m>-set</title>
		<statement>
			<p>
				The number of <m>k</m>-combinations of a set with <m>n</m> distinct elements, denoted by <m>\displaystyle\binom{n}{k}</m> (read as <sq><m>n</m> choose <m>k</m></sq>), is
				<me> \binom{n}{k} = \dfrac{n!}{(n-k)!\ k!} = \dfrac{{}_nP_k}{k!}</me>.
				Alternative notation for this include <m>C(n,k)</m> and <m>_nC_k</m>.
			</p>
		</statement>
	</proposition>
		
	<example xml:id="eg-counting-standard-deck">
		<title>Counting Cards</title>
		<statement>
			<p>
				A <term>standard deck of cards</term> consists of 52 cards, which come in 13 ranks (A/ace, 2, 3, 4, 5, 6, 7, 8, 9, 10, J/jack, Q/queen, K/king) of four cards each, one for each suit: clubs <m>\clubsuit</m> (a black suit), spades <m>\spadesuit</m> (black), hearts <m>\heartsuit</m> (red), diamonds <m>\diamondsuit</m> (red).
				<ol label="(a)">
					<li>How many outcomes (or <alert>hands</alert>) are possible when you draw five cards at random from the deck?</li>
					<li>How many of these five-card hands comprise only numbered cards?</li>
					<li>How many of these five-card hands have exactly two red and three black cards?</li>
				</ol>
			</p>
			<p><alert>Solution</alert>
				a. There are 52 distinct cards in the deck, and we are drawing five of them at random.
				Each outcome only depends on which cards are drawn, so the order in which we draw them does not matter.
				Therefore there are <me>\binom{52}{5} = \frac{52!}{47! \ 5!} = 2598960</me> possible five-card hands.
			</p>
			<p>
				b. The ranks 2 to 10 are the numbered cards; there are a total of 36 numbered cards in a deck (9 ranks times 4 suits each).
				The number of five-card hands drawn from these cards is <me>\binom{36}{5}</me>.
			</p>
			<p>
				c. The process of forming such a five-card hand can be broken down into two steps:
			</p>
				<sidebyside widths="40% 40%" margins="auto">
				<p>Step 1: Pick two red cards</p>
				<p>Step 2: Pick three black cards</p>
				</sidebyside>
			<p>
				These two steps are independent of one another.
				There are 26 black and 26 red cards, so the <xref text="custom" ref="prin-prod-rule">Product Rule</xref> tells us that there are <me>\binom{26}{2}\binom{26}{3}</me> five-card hands with this property.
			</p>
		</statement>
	</example>

	<exercise xml:id="ex-counting-esports-comb">
		<title>Esports Tournament, again</title>
		<statement>
			<p>
				Solve part a. of <xref ref="ex-counting-esports"/> using <xref ref="prop-comb"/>
			</p>
			<p>
				Then solve part b. (and express your answer) using only combinations.
			</p>
		</statement>
		<answer>
			<p>b. Use the <xref text="custom" ref="prin-prod-rule">Product Rule</xref> where each step corresponds to selecting players for a role.</p>
		</answer>
		<solution>
			<p>
				First, we select the carry player: there are <m>\displaystyle\binom{30}{1}</m> ways to do so.
			</p>
			<p>
				Then we can select the mid player in <m>\displaystyle\binom{29}{1}</m> ways regardless of who was picked to be carry. (Pick one player out of the 29 remaining.)
			</p>
			<p>
				The offlane player can be picked in <m>\displaystyle\binom{28}{1}</m> ways.
			</p>
			<p>
				To pick supports, <m>\displaystyle\binom{27}{2}</m> possible combinations.
				Selecting reserve players, <m>\displaystyle\binom{25}{2}</m> choices.
			</p>
			<p>
				Hence there are <me>\binom{30}{1}\binom{29}{1}\binom{28}{1}\binom{27}{2}\binom{25}{2}</me> possible team combinations.
			</p>
		</solution>
	</exercise>

	<exercise xml:id="ex-counting-Cnk-two-ways">
		<title>Two Ways of Counting</title>
		<statement>
			<p>
				Let <m>0 \leq k \leq n</m>.
				Using algebra it's straightforward to show that <me>\binom{n}{k} = \binom{n}{n-k}</me>.
				Without using algebra, explain why <m>\displaystyle\binom{n}{k}</m> is equal to <m>\displaystyle\binom{n}{n-k}</m> by counting the number of <m>k</m>-subsets of <m>\{1,2,\ldots,n\}</m> in two ways.
			</p>
		</statement>
		<hint>
			<p>
				The first way is the usual way.
				For the second way: select elements that will <em>not</em> be put in the <m>k</m>-set.
			</p>
		</hint>
	</exercise>

	<exploration xml:id="expl-susruta">
		<title>Early Combinatorics</title>
		<introduction>
			<p>
				Some of the earliest mentions of permutations and combinations occur in ancient Hindu texts dating back to the year 600 <bc/>.
				Called <em>vikalpa</em> and <em>bhaṅga</em>, respectively, they were used in the study of <url href="https://en.wikipedia.org/wiki/Sanskrit_prosody">Vedic meters</url> in poetry, in architecture, in medicine, astrology, and other areas.
			</p>
			<p>
				The following examples are taken from <xref ref="bib-kolachana-2019"/>.
			</p>
		</introduction>
		<task>
			<statement>
				<p>
					The <url href="https://en.wikipedia.org/wiki/Sushruta_Samhita"><pubtitle>Suśruta-saṃhitā</pubtitle></url>, (est. 500 <bc/>) an ancient Hindu text on medicine and surgery, counts the number of combinations of the flavours <em>sweet</em>, <em>acid</em>, <em>saline</em>, <em>pungent</em>, <em>bitter</em>, and <em>astringent</em> taken two at a time, in the following way:
				</p>
				<blockquote>
					<p>
						<q>On making two combinations in successive way, those beginning
						with sweet are found to be 5 in number; those beginning with
						acid are 4; those with saline 3; those with pungent 2; bitter and
						astringent make 1 combination.</q>
					</p>
					<attribution><pubtitle>Suśruta-saṃhitā</pubtitle> lxiii, as cited in <xref ref="bib-kolachana-2019"/>, p. 358</attribution>
				</blockquote>
				<p>
					Explain how this computes <m>\displaystyle\binom{6}{2}</m>.
				</p>
			</statement>
		</task>
		<task>
			<statement>
				<p>
					This excerpt from the <pubtitle>Anuyogadvāra-sūtra</pubtitle> (c. 500) explains how to compute <m>6!</m>.
				</p>
				<blockquote>
					<p>
						<q>What is the direct arrangement? Dharmāstikāya, Adharmāstikāya, Ākāśāstikāya, Jīvāstikāya, Pudgalāstikāya and Addhāsamaya<mdash/>this is the direct arrangement. What is the reverse arrangement? Addhāsamaya, Pudgalāstikāya, Jīvāstikāya, Ākāśāstikāya, Adharmāstikāya, and Dharmāstikāya<mdash/>this is the reverse arrangement. What are the mixed arrangements? From the series of numbers beginning with one and increasing by one up to six terms. The mutual products of these minus 2 will give the number of mixed arrangements.</q>
					</p>
					<attribution><pubtitle>Anuyogadvāra-sūtra</pubtitle>, Sūtra 97, as cited in <xref ref="bib-kolachana-2019"/>, p. 363.</attribution>
				</blockquote>
				<p>
					Discuss what <em>mixed arrangement</em> refers to and how the computation of <m>6!</m> is carried out.
				</p>
			</statement>
		</task>
	</exploration>


<solutions inline="solution">
    <title>Solutions to Selected Checkpoints</title>
</solutions>




</section>
